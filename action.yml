name: 'WIPAC Dev Py Dependencies'
description: 'GitHub Action Package for Automating Python-Package Dependency Management'

inputs:
  git_committer_name:
    description: 'The name used for "git config user.name"'
    required: false
    default: github-actions
  git_committer_email:
    description: 'The email used for "git config user.email"'
    required: false
    default: github-actions@github.com
  dockerfile_nametags:
    description: 'A space-separated list of image names and tags to apply to each Dockerfile for locally dependent builds (these images are built first), ex: Dockerfile:icecube/skymap_scanner:latest Dockerfile_pulsar:icecube/skymap_scanner:latest_pulsar'
    required: false
    default: ''

# outputs:
#   random-number:
#     description: "Random number"
#     value: ${{ steps.random-number-generator.outputs.random-id }}

runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v4
      with:
        python-version: '3.11'  # NOTE: update, someday. Also tests.yml

    - name: Is this the most recent commit? It won't be if the action was reran
      run: |
        git fetch &> /dev/null
        if [[ $(git status -sb | grep behind) ]]; then
          echo "IS_GIT_BEHIND=true" >> $GITHUB_ENV
          echo "this commit is not the most recent on this branch -- rest of action will be skipped"
        fi
      shell: bash

    - name: Git config
      if: env.IS_GIT_BEHIND != 'true'
      run: |
        git config user.name ${{ inputs.git_committer_name }}
        git config user.email ${{ inputs.git_committer_email }}
      shell: bash

    - name: pip
      if: env.IS_GIT_BEHIND != 'true'
      run: |
        sudo apt-get update
        pip3 install -r ${{ github.action_path }}/requirements.txt
      shell: bash

    - name: Build dependencies.log (and commit)
      if: env.IS_GIT_BEHIND != 'true'
      run: |
        set -x  # turn on debugging
        
        # append permissive line to .gitignore since *.log is commonly present
        line='!dependencies*.log'
        if [[ ! $(grep -F "$line" .gitignore) ]]; then
          echo "" >> .gitignore
          echo "" >> .gitignore
          echo "# wipac-dev-py-setup-action" >> .gitignore
          echo "$line" >> .gitignore
          git add .gitignore
          git commit -m "<bot> update .gitignore" || true  # okay if no change
          tail .gitignore
        fi
        
        # TODO: find the image on github / build if on a branch
        CONTAINER="myaction:local"
        docker build --tag $CONTAINER ${{ github.action_path }}

        # run docker container
        docker run --rm \
            --env GITHUB_ACTION_PATH=/gha/ \
            --env ACTION_REPOSITORY="WIPACrepo/wipac-dev-py-setup-action" \
            --env DOCKERFILE_NAMETAGS="${{ inputs.dockerfile_nametags }}" \
            --mount type=bind,source=${{ github.action_path }},target=/gha/ \
            --mount type=bind,source=$(pwd),target=/repo/ \
            $CONTAINER
        
        # Commit
        git add .
        git commit -m "<bot> update dependencies*.log files(s)" || true  # okay if no change

      shell: bash

    - name: Push changes
      if: env.IS_GIT_BEHIND != 'true'
      run: |
        status=`git status 2>&1 | tee`
        ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
        if [ "$ahead" -eq "1" ]; then
          echo "no changes needed"
          exit 0
        fi
        git push
        echo "changes pushed"
      shell: bash
